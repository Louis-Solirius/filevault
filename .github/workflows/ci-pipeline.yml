name: CI Pipeline

env:
  AZURE_WEBAPP_NAME: louisw-fault-vault-web-app
  ACR_NAME: lwweaponofchoicecr
  ACR_LOGIN_SERVER: lwweaponofchoicecr.azurecr.io

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  pull-requests: read

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npx eslint .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test

  build-and-push:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.ACR_LOGIN_SERVER }}/filevault-app-clean:latest
          file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v3
        with:
          playbook: ansible/playbooks/filevault-docker-setup.yml
          directory: ansible
          inventory: |
            [filevault-app-servers]
            ansible_host=${{ secrets.ANSIBLE_HOST }} ansible_port=${{ secrects.ANSIBLE_PORT }} ansible_user=${{ secrects.ANSIBLE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          vault_password: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
